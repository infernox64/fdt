# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Maven packages
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Install dependencies if not cached
      if: steps.cache.outputs.cache-hit != 'true'
      run: ./add-lib-to-local-maven.sh
    - run: mkdir -p out/{log,fdt}
    - name: Build with Maven
      id: package
      continue-on-error: true
      run: |
        mvn -B package --file pom.xml 2>&1 >out/log/maven.log
        [ -f target/fdt.jar ] && cp target/fdt.jar out/fdt.jar
    - uses: actions/upload-artifact@v1
      if: success()
      with:
        name: fdt-snapshot
        path: out/fdt
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: maven-log
        path: out/log
    - name: Debug log for actions
      uses: hmarr/debug-action@v1.0.0

#    - name: AWS upload
#      uses: ItsKarma/aws-cli@v1.70.0
#      with:
#        args: s3 sync --delete --acl public-read localdir/ s3://remote-bucket/
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        AWS_DEFAULT_REGION: "us-east-1"
    
      
